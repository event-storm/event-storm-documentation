"use strict";(self.webpackChunkevent_storm_documentation=self.webpackChunkevent_storm_documentation||[]).push([[5775],{5143:e=>{e.exports=JSON.parse('{"label":"bindings","permalink":"/docs/tags/bindings","allTagsPath":"/docs/tags","count":6,"items":[{"id":"bindings/react/overview","title":"Overview","description":"The React Event Storm is providing a lightweight, minimal abstraction for the Event Storm library","permalink":"/docs/bindings/react/overview"},{"id":"bindings/react/subscription","title":"Subscription types","description":"The Event Storm is presenting 3 levels of subscription: active subscription, passive subscription, condition-based subscription","permalink":"/docs/bindings/react/subscription"},{"id":"bindings/overview","title":"Supported bindings","description":"The library officially supports the following bindings. React - The library provides simple hooks on top of the Event Storm functionality. The binding is about 0.4kb","permalink":"/docs/bindings/overview"},{"id":"bindings/react/api-reference/usemodels","title":"useModels","description":"The Event Storm models also can be used with React components. useModels can receive a models array, subscribe to them and return their last states","permalink":"/docs/bindings/react/api-reference/usemodels"},{"id":"bindings/react/api-reference/usepublish","title":"usePublish","description":"The publish hook, is simply re exporting of the storm.publish method. Arguments: storm (the storm object, for which the publish method will be provided)","permalink":"/docs/bindings/react/api-reference/usepublish"},{"id":"bindings/react/api-reference/usestorm","title":"useStorm","description":"The storm inside react components can be used with the help of useStorm hook. Arguments: store, selectFragment, options","permalink":"/docs/bindings/react/api-reference/usestorm"}]}')}}]);