"use strict";(self.webpackChunkevent_storm_documentation=self.webpackChunkevent_storm_documentation||[]).push([[4852],{3493:e=>{e.exports=JSON.parse('{"label":"api-reference","permalink":"/docs/tags/api-reference","allTagsPath":"/docs/tags","count":4,"items":[{"id":"api-reference/persistency","title":"Make the store persistant","description":"You can easily make your store\'s any segment to be persisted by using the respective function.","permalink":"/docs/api-reference/persistency"},{"id":"api-reference/model","title":"Model","description":"Creating a single information unit. Use this method to have synchronized updates for all the subscribers. Model can accept any JS type","permalink":"/docs/api-reference/model"},{"id":"api-reference/virtualmodel","title":"Model with state derivation","description":"It is possible to derive the state of the model and compose abstraction on that derivation. The abstraction is called virtual model","permalink":"/docs/api-reference/virtualmodel"},{"id":"api-reference/storm","title":"Storm","description":"The library will organize subscrition and data store updates in such a manner to keep track of individual subscription and individual updates. In other words, The Event Storm claims to update only for the given subscription.","permalink":"/docs/api-reference/storm"}]}')}}]);