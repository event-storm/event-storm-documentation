"use strict";(self.webpackChunkevent_storm_documentation=self.webpackChunkevent_storm_documentation||[]).push([[1159],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,b=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(b,s(s({ref:t},u),{},{components:n})):r.createElement(b,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={id:"usemodels",title:"useModels",description:"The Event Storm models also can be used with React components. useModels can receive a models array, subscribe to them and return their last states",tags:["react","Event Storm","useModels","bindings"],sidebar_position:3},s=void 0,i={unversionedId:"bindings/react/api-reference/usemodels",id:"bindings/react/api-reference/usemodels",title:"useModels",description:"The Event Storm models also can be used with React components. useModels can receive a models array, subscribe to them and return their last states",source:"@site/docs/bindings/react/api-reference/useModels.md",sourceDirName:"bindings/react/api-reference",slug:"/bindings/react/api-reference/usemodels",permalink:"/event-storm-documentation/docs/bindings/react/api-reference/usemodels",draft:!1,editUrl:"https://github.com/event-storm/tree/main/docs/bindings/react/api-reference/useModels.md",tags:[{label:"react",permalink:"/event-storm-documentation/docs/tags/react"},{label:"Event Storm",permalink:"/event-storm-documentation/docs/tags/event-storm"},{label:"useModels",permalink:"/event-storm-documentation/docs/tags/use-models"},{label:"bindings",permalink:"/event-storm-documentation/docs/tags/bindings"}],version:"current",sidebarPosition:3,frontMatter:{id:"usemodels",title:"useModels",description:"The Event Storm models also can be used with React components. useModels can receive a models array, subscribe to them and return their last states",tags:["react","Event Storm","useModels","bindings"],sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"usePublish",permalink:"/event-storm-documentation/docs/bindings/react/api-reference/usepublish"}},l={},c=[{value:"Arguments",id:"arguments",level:2},{value:"Returns",id:"returns",level:2},{value:"ISubscriptionOptions",id:"isubscriptionoptions",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Event Storm models also can be used with React components. ",(0,o.kt)("inlineCode",{parentName:"p"},"useModels")," can receive a ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/model#imodel"},"models")," array, subscribe to them and return their last states( in the same provided order)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createModel } from 'event-storm';\nimport { useModels } from 'react-event-storm';\n\nconst isPopupVisible = createModel(true);\nconst age = createModel(1);\n\nfunction AnyComponent() {\n  const [popupVisible, ageValue] = useModels([isPopupVisible, age]);\n  return (\n    <div>\n      {isPopupVisible ? 'close' : 'open'}\n      {age}\n    </div>\n  );\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function useModels<T extends IModelConfiguration>(models: IModel<any, T>[], options?: ISubscriptionOptions): any[];\n")),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"models - The ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/model#imodel"},"models")," array to subcribe."),(0,o.kt)("li",{parentName:"ul"},"options - The subscription ",(0,o.kt)("a",{parentName:"li",href:"#isubscriptionoptions"},"configuration object"),". The same as for ",(0,o.kt)("a",{parentName:"li",href:"/event-storm-documentation/docs/bindings/react/api-reference/usestorm#isubscriptionoptions"},"useStorm"))),(0,o.kt)("h2",{id:"returns"},"Returns"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The hook returns the values of the provided models with an array. The array order corresponds to the provider models array order.")),(0,o.kt)("admonition",{title:"What about unsubscribe?",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useModels")," hook will handle the unsubscribe process automatically on component unmount.")),(0,o.kt)("h3",{id:"isubscriptionoptions"},"ISubscriptionOptions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ISubscriptionOptions {\n  active?: boolean;\n}\n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"active"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"\u274e"),(0,o.kt)("td",{parentName:"tr",align:null},"If set to ",(0,o.kt)("inlineCode",{parentName:"td"},"false")," the value of the selector will be updated, but the component will not rerender. Defaults to ",(0,o.kt)("inlineCode",{parentName:"td"},"true"))))))}p.isMDXComponent=!0}}]);